/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com._16minutes.liquiprime

import com._16minutes.liquiprime.settings.LiquiprimeExtension
import com._16minutes.liquiprime.settings.LiquiprimeExtension.PrimerExecutionSettings
import com._16minutes.liquiprime.tasks.PrimeDatabases
import org.gradle.api.Project
import org.gradle.api.Plugin

/**
 * A simple 'hello world' plugin.
 */
class Liquiprime: Plugin<Project> {
    enum class TaskName(val value: String) {
        PRIME_DATABASES("liquiprimePrimeDatabases")
    }

    companion object {
        const val PLUGIN_NAME_CAMEL_CASE = "liquiprime"
        const val PLUGIN_NAME_PASCAL_CASE = "Liquiprime"
    }

    object LiquibaseGradleConstants {
        const val TASK_GROUP_NAME = "Liquibase"
        const val RUNTIME_CONFIGURATION_NAME = "liquibaseRuntime"
    }

    private fun addExtension(project: Project): LiquiprimeExtension {
        val primerSettingsNamedDomainObjectContainer =
            project.objects.domainObjectContainer(PrimerExecutionSettings::class.java)

        return project.extensions.create(
            PLUGIN_NAME_CAMEL_CASE,
            LiquiprimeExtension::class.java,
            primerSettingsNamedDomainObjectContainer
        )
    }

    private fun addTasks(project: Project, liquiprimeExtension: LiquiprimeExtension) {
        val taskContainer = project.tasks

        val primeDatabasesTask = taskContainer.create(
            TaskName.PRIME_DATABASES.value,
            PrimeDatabases::class.java,
            liquiprimeExtension
        )

        taskContainer
            .matching { it.group == LiquibaseGradleConstants.TASK_GROUP_NAME }
            .forEach { it.dependsOn(primeDatabasesTask) }
    }

    override fun apply(project: Project) {
        val liquiprimeExtension = addExtension(project)

        project.afterEvaluate {
            addTasks(project, liquiprimeExtension)
        }
    }
}
